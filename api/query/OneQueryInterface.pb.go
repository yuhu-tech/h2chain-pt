// Code generated by protoc-gen-go. DO NOT EDIT.
// source: OneQueryInterface.proto

package query

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type QueryRequest struct {
	OrderId              string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Who                  *QueryRequest_Identity `protobuf:"bytes,2,opt,name=who,proto3" json:"who,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82093f996de64c7c, []int{0}
}

func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (m *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(m, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

func (m *QueryRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *QueryRequest) GetWho() *QueryRequest_Identity {
	if m != nil {
		return m.Who
	}
	return nil
}

type QueryRequest_Identity struct {
	Hotel                string   `protobuf:"bytes,1,opt,name=hotel,proto3" json:"hotel,omitempty"`
	Adviser              string   `protobuf:"bytes,2,opt,name=adviser,proto3" json:"adviser,omitempty"`
	Pt                   string   `protobuf:"bytes,3,opt,name=pt,proto3" json:"pt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRequest_Identity) Reset()         { *m = QueryRequest_Identity{} }
func (m *QueryRequest_Identity) String() string { return proto.CompactTextString(m) }
func (*QueryRequest_Identity) ProtoMessage()    {}
func (*QueryRequest_Identity) Descriptor() ([]byte, []int) {
	return fileDescriptor_82093f996de64c7c, []int{0, 0}
}

func (m *QueryRequest_Identity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest_Identity.Unmarshal(m, b)
}
func (m *QueryRequest_Identity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest_Identity.Marshal(b, m, deterministic)
}
func (m *QueryRequest_Identity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest_Identity.Merge(m, src)
}
func (m *QueryRequest_Identity) XXX_Size() int {
	return xxx_messageInfo_QueryRequest_Identity.Size(m)
}
func (m *QueryRequest_Identity) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest_Identity.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest_Identity proto.InternalMessageInfo

func (m *QueryRequest_Identity) GetHotel() string {
	if m != nil {
		return m.Hotel
	}
	return ""
}

func (m *QueryRequest_Identity) GetAdviser() string {
	if m != nil {
		return m.Adviser
	}
	return ""
}

func (m *QueryRequest_Identity) GetPt() string {
	if m != nil {
		return m.Pt
	}
	return ""
}

type QueryReply struct {
	OrderOrigin          *QueryReply_OrderOrigin          `protobuf:"bytes,1,opt,name=order_origin,json=orderOrigin,proto3" json:"order_origin,omitempty"`
	OrderHotelModify     []*QueryReply_OrderHotelModify   `protobuf:"bytes,2,rep,name=order_hotel_modify,json=orderHotelModify,proto3" json:"order_hotel_modify,omitempty"`
	OrderAdviserModify   []*QueryReply_OrderAdviserModify `protobuf:"bytes,3,rep,name=order_adviser_modify,json=orderAdviserModify,proto3" json:"order_adviser_modify,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *QueryReply) Reset()         { *m = QueryReply{} }
func (m *QueryReply) String() string { return proto.CompactTextString(m) }
func (*QueryReply) ProtoMessage()    {}
func (*QueryReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_82093f996de64c7c, []int{1}
}

func (m *QueryReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryReply.Unmarshal(m, b)
}
func (m *QueryReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryReply.Marshal(b, m, deterministic)
}
func (m *QueryReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryReply.Merge(m, src)
}
func (m *QueryReply) XXX_Size() int {
	return xxx_messageInfo_QueryReply.Size(m)
}
func (m *QueryReply) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryReply.DiscardUnknown(m)
}

var xxx_messageInfo_QueryReply proto.InternalMessageInfo

func (m *QueryReply) GetOrderOrigin() *QueryReply_OrderOrigin {
	if m != nil {
		return m.OrderOrigin
	}
	return nil
}

func (m *QueryReply) GetOrderHotelModify() []*QueryReply_OrderHotelModify {
	if m != nil {
		return m.OrderHotelModify
	}
	return nil
}

func (m *QueryReply) GetOrderAdviserModify() []*QueryReply_OrderAdviserModify {
	if m != nil {
		return m.OrderAdviserModify
	}
	return nil
}

type QueryReply_OrderOrigin struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HotelId              string   `protobuf:"bytes,2,opt,name=hotel_id,json=hotelId,proto3" json:"hotel_id,omitempty"`
	HrId                 string   `protobuf:"bytes,3,opt,name=hr_id,json=hrId,proto3" json:"hr_id,omitempty"`
	AdviserId            string   `protobuf:"bytes,4,opt,name=adviser_id,json=adviserId,proto3" json:"adviser_id,omitempty"`
	Date                 string   `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	Duration             int32    `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	Mode                 int32    `protobuf:"varint,7,opt,name=mode,proto3" json:"mode,omitempty"`
	Count                int32    `protobuf:"varint,8,opt,name=count,proto3" json:"count,omitempty"`
	CountMale            int32    `protobuf:"varint,9,opt,name=count_male,json=countMale,proto3" json:"count_male,omitempty"`
	Status               int32    `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryReply_OrderOrigin) Reset()         { *m = QueryReply_OrderOrigin{} }
func (m *QueryReply_OrderOrigin) String() string { return proto.CompactTextString(m) }
func (*QueryReply_OrderOrigin) ProtoMessage()    {}
func (*QueryReply_OrderOrigin) Descriptor() ([]byte, []int) {
	return fileDescriptor_82093f996de64c7c, []int{1, 0}
}

func (m *QueryReply_OrderOrigin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryReply_OrderOrigin.Unmarshal(m, b)
}
func (m *QueryReply_OrderOrigin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryReply_OrderOrigin.Marshal(b, m, deterministic)
}
func (m *QueryReply_OrderOrigin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryReply_OrderOrigin.Merge(m, src)
}
func (m *QueryReply_OrderOrigin) XXX_Size() int {
	return xxx_messageInfo_QueryReply_OrderOrigin.Size(m)
}
func (m *QueryReply_OrderOrigin) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryReply_OrderOrigin.DiscardUnknown(m)
}

var xxx_messageInfo_QueryReply_OrderOrigin proto.InternalMessageInfo

func (m *QueryReply_OrderOrigin) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *QueryReply_OrderOrigin) GetHotelId() string {
	if m != nil {
		return m.HotelId
	}
	return ""
}

func (m *QueryReply_OrderOrigin) GetHrId() string {
	if m != nil {
		return m.HrId
	}
	return ""
}

func (m *QueryReply_OrderOrigin) GetAdviserId() string {
	if m != nil {
		return m.AdviserId
	}
	return ""
}

func (m *QueryReply_OrderOrigin) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *QueryReply_OrderOrigin) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *QueryReply_OrderOrigin) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *QueryReply_OrderOrigin) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *QueryReply_OrderOrigin) GetCountMale() int32 {
	if m != nil {
		return m.CountMale
	}
	return 0
}

func (m *QueryReply_OrderOrigin) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type QueryReply_OrderHotelModify struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Revision             int32    `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	TimeStamp            string   `protobuf:"bytes,3,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	Count                int32    `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	CountMale            int32    `protobuf:"varint,5,opt,name=count_male,json=countMale,proto3" json:"count_male,omitempty"`
	CountYet             int32    `protobuf:"varint,6,opt,name=count_yet,json=countYet,proto3" json:"count_yet,omitempty"`
	CountMaleYet         int32    `protobuf:"varint,7,opt,name=count_male_yet,json=countMaleYet,proto3" json:"count_male_yet,omitempty"`
	StartTime            int32    `protobuf:"varint,8,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Duration             int32    `protobuf:"varint,9,opt,name=duration,proto3" json:"duration,omitempty"`
	Mode                 int32    `protobuf:"varint,10,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryReply_OrderHotelModify) Reset()         { *m = QueryReply_OrderHotelModify{} }
func (m *QueryReply_OrderHotelModify) String() string { return proto.CompactTextString(m) }
func (*QueryReply_OrderHotelModify) ProtoMessage()    {}
func (*QueryReply_OrderHotelModify) Descriptor() ([]byte, []int) {
	return fileDescriptor_82093f996de64c7c, []int{1, 1}
}

func (m *QueryReply_OrderHotelModify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryReply_OrderHotelModify.Unmarshal(m, b)
}
func (m *QueryReply_OrderHotelModify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryReply_OrderHotelModify.Marshal(b, m, deterministic)
}
func (m *QueryReply_OrderHotelModify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryReply_OrderHotelModify.Merge(m, src)
}
func (m *QueryReply_OrderHotelModify) XXX_Size() int {
	return xxx_messageInfo_QueryReply_OrderHotelModify.Size(m)
}
func (m *QueryReply_OrderHotelModify) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryReply_OrderHotelModify.DiscardUnknown(m)
}

var xxx_messageInfo_QueryReply_OrderHotelModify proto.InternalMessageInfo

func (m *QueryReply_OrderHotelModify) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *QueryReply_OrderHotelModify) GetRevision() int32 {
	if m != nil {
		return m.Revision
	}
	return 0
}

func (m *QueryReply_OrderHotelModify) GetTimeStamp() string {
	if m != nil {
		return m.TimeStamp
	}
	return ""
}

func (m *QueryReply_OrderHotelModify) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *QueryReply_OrderHotelModify) GetCountMale() int32 {
	if m != nil {
		return m.CountMale
	}
	return 0
}

func (m *QueryReply_OrderHotelModify) GetCountYet() int32 {
	if m != nil {
		return m.CountYet
	}
	return 0
}

func (m *QueryReply_OrderHotelModify) GetCountMaleYet() int32 {
	if m != nil {
		return m.CountMaleYet
	}
	return 0
}

func (m *QueryReply_OrderHotelModify) GetStartTime() int32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *QueryReply_OrderHotelModify) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *QueryReply_OrderHotelModify) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

type QueryReply_OrderAdviserModify struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Revision             int32    `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	TimeStamp            string   `protobuf:"bytes,3,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	IsFloat              int32    `protobuf:"varint,4,opt,name=is_float,json=isFloat,proto3" json:"is_float,omitempty"`
	Count                int32    `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	CountMale            int32    `protobuf:"varint,6,opt,name=count_male,json=countMale,proto3" json:"count_male,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryReply_OrderAdviserModify) Reset()         { *m = QueryReply_OrderAdviserModify{} }
func (m *QueryReply_OrderAdviserModify) String() string { return proto.CompactTextString(m) }
func (*QueryReply_OrderAdviserModify) ProtoMessage()    {}
func (*QueryReply_OrderAdviserModify) Descriptor() ([]byte, []int) {
	return fileDescriptor_82093f996de64c7c, []int{1, 2}
}

func (m *QueryReply_OrderAdviserModify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryReply_OrderAdviserModify.Unmarshal(m, b)
}
func (m *QueryReply_OrderAdviserModify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryReply_OrderAdviserModify.Marshal(b, m, deterministic)
}
func (m *QueryReply_OrderAdviserModify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryReply_OrderAdviserModify.Merge(m, src)
}
func (m *QueryReply_OrderAdviserModify) XXX_Size() int {
	return xxx_messageInfo_QueryReply_OrderAdviserModify.Size(m)
}
func (m *QueryReply_OrderAdviserModify) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryReply_OrderAdviserModify.DiscardUnknown(m)
}

var xxx_messageInfo_QueryReply_OrderAdviserModify proto.InternalMessageInfo

func (m *QueryReply_OrderAdviserModify) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *QueryReply_OrderAdviserModify) GetRevision() int32 {
	if m != nil {
		return m.Revision
	}
	return 0
}

func (m *QueryReply_OrderAdviserModify) GetTimeStamp() string {
	if m != nil {
		return m.TimeStamp
	}
	return ""
}

func (m *QueryReply_OrderAdviserModify) GetIsFloat() int32 {
	if m != nil {
		return m.IsFloat
	}
	return 0
}

func (m *QueryReply_OrderAdviserModify) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *QueryReply_OrderAdviserModify) GetCountMale() int32 {
	if m != nil {
		return m.CountMale
	}
	return 0
}

func init() {
	proto.RegisterType((*QueryRequest)(nil), "QueryRequest")
	proto.RegisterType((*QueryRequest_Identity)(nil), "QueryRequest.Identity")
	proto.RegisterType((*QueryReply)(nil), "QueryReply")
	proto.RegisterType((*QueryReply_OrderOrigin)(nil), "QueryReply.OrderOrigin")
	proto.RegisterType((*QueryReply_OrderHotelModify)(nil), "QueryReply.OrderHotelModify")
	proto.RegisterType((*QueryReply_OrderAdviserModify)(nil), "QueryReply.OrderAdviserModify")
}

func init() { proto.RegisterFile("OneQueryInterface.proto", fileDescriptor_82093f996de64c7c) }

var fileDescriptor_82093f996de64c7c = []byte{
	// 545 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x25, 0x69, 0xd3, 0x26, 0x93, 0xb2, 0x5a, 0x99, 0xd5, 0xae, 0x37, 0xb0, 0xa8, 0xaa, 0x38,
	0x54, 0x1c, 0x7a, 0xe8, 0xde, 0xb8, 0x71, 0x41, 0x74, 0xa5, 0x55, 0x21, 0x70, 0xe1, 0x14, 0x99,
	0xb5, 0x4b, 0x2d, 0x35, 0x71, 0x71, 0xdc, 0x45, 0xf9, 0x35, 0x5c, 0xb8, 0xf3, 0x13, 0xf8, 0x65,
	0x48, 0xc8, 0xe3, 0xa4, 0xe9, 0x87, 0x7a, 0xe3, 0xe6, 0xf7, 0x66, 0xe6, 0xf9, 0xe9, 0x4d, 0x1c,
	0xb8, 0x9a, 0x17, 0xe2, 0xe3, 0x46, 0xe8, 0x6a, 0x56, 0x18, 0xa1, 0x17, 0xec, 0x41, 0x4c, 0xd6,
	0x5a, 0x19, 0x35, 0xfa, 0xe9, 0xc1, 0x00, 0x0b, 0xa9, 0xf8, 0xbe, 0x11, 0xa5, 0x21, 0xd7, 0x10,
	0x2a, 0xcd, 0x85, 0xce, 0x24, 0xa7, 0xde, 0xd0, 0x1b, 0x47, 0x69, 0x1f, 0xf1, 0x8c, 0x93, 0x31,
	0x74, 0x7e, 0x2c, 0x15, 0xf5, 0x87, 0xde, 0x38, 0x9e, 0x5e, 0x4e, 0x76, 0xc7, 0x26, 0x33, 0x2e,
	0x0a, 0x23, 0x4d, 0x95, 0xda, 0x96, 0xe4, 0x0e, 0xc2, 0x86, 0x20, 0x17, 0x10, 0x2c, 0x95, 0x11,
	0xab, 0x5a, 0xcd, 0x01, 0x42, 0xa1, 0xcf, 0xf8, 0xa3, 0x2c, 0x85, 0x46, 0xbd, 0x28, 0x6d, 0x20,
	0x39, 0x03, 0x7f, 0x6d, 0x68, 0x07, 0x49, 0x7f, 0x6d, 0x46, 0x7f, 0xfa, 0x00, 0xf5, 0x55, 0xeb,
	0x55, 0x45, 0xde, 0xc0, 0xc0, 0xf9, 0x53, 0x5a, 0x7e, 0x93, 0x05, 0xaa, 0xc6, 0xd3, 0xab, 0x49,
	0xdb, 0x32, 0x99, 0xdb, 0xfa, 0x1c, 0xcb, 0x69, 0xac, 0x5a, 0x40, 0xee, 0x80, 0xb8, 0x59, 0xf4,
	0x90, 0xe5, 0x8a, 0xcb, 0x45, 0x45, 0xfd, 0x61, 0x67, 0x1c, 0x4f, 0x5f, 0x1c, 0x29, 0xbc, 0xb7,
	0x4d, 0xf7, 0xd8, 0x93, 0x9e, 0xab, 0x03, 0x86, 0x7c, 0x80, 0x0b, 0xa7, 0x55, 0xfb, 0x6e, 0xd4,
	0x3a, 0xa8, 0xf6, 0xf2, 0x48, 0xed, 0xad, 0x6b, 0xab, 0xf5, 0x9c, 0x8f, 0x3d, 0x2e, 0xf9, 0xeb,
	0x41, 0xbc, 0x63, 0xdd, 0x06, 0xb1, 0xdd, 0x81, 0x2f, 0xb9, 0xdd, 0x8c, 0xf3, 0x2d, 0x79, 0x93,
	0x19, 0xe2, 0x19, 0x27, 0xcf, 0x20, 0x58, 0xe2, 0xc6, 0x5c, 0x6c, 0xdd, 0xa5, 0x5d, 0xd7, 0x0d,
	0x40, 0xe3, 0x4d, 0x72, 0xda, 0xc5, 0x4a, 0x54, 0x33, 0x33, 0x4e, 0x08, 0x74, 0x39, 0x33, 0x82,
	0x06, 0x6e, 0xc4, 0x9e, 0x49, 0x02, 0x21, 0xdf, 0x68, 0x66, 0xa4, 0x2a, 0x68, 0x6f, 0xe8, 0x8d,
	0x83, 0x74, 0x8b, 0x6d, 0x7f, 0xae, 0xb8, 0xa0, 0x7d, 0xe4, 0xf1, 0x6c, 0x77, 0xfb, 0xa0, 0x36,
	0x85, 0xa1, 0x21, 0x92, 0x0e, 0xd8, 0x8b, 0xf1, 0x90, 0xe5, 0x6c, 0x25, 0x68, 0x84, 0xa5, 0x08,
	0x99, 0x7b, 0xb6, 0x12, 0xe4, 0x12, 0x7a, 0xa5, 0x61, 0x66, 0x53, 0x52, 0xc0, 0x52, 0x8d, 0x92,
	0x5f, 0x3e, 0x9c, 0x1f, 0x06, 0x7f, 0x14, 0x42, 0x02, 0xa1, 0x16, 0x8f, 0xb2, 0xb4, 0x0e, 0x7d,
	0xe7, 0xb0, 0xc1, 0xf6, 0x5e, 0x23, 0x73, 0x91, 0x95, 0x86, 0xe5, 0xeb, 0x3a, 0x8a, 0xc8, 0x32,
	0x9f, 0x2c, 0xd1, 0x9a, 0xed, 0x9e, 0x36, 0x1b, 0x1c, 0x9a, 0x7d, 0x0e, 0x0e, 0x64, 0x95, 0x30,
	0x4d, 0x24, 0x48, 0x7c, 0x11, 0x86, 0xbc, 0x82, 0xb3, 0x76, 0x16, 0x3b, 0x5c, 0x38, 0x83, 0xed,
	0xbc, 0xed, 0xba, 0x01, 0x28, 0x0d, 0xd3, 0x26, 0xb3, 0x56, 0xea, 0xa4, 0x22, 0x64, 0x3e, 0xcb,
	0x7c, 0x3f, 0xf3, 0xe8, 0x44, 0xe6, 0xd0, 0x66, 0x9e, 0xfc, 0xf6, 0x80, 0x1c, 0x7f, 0x51, 0xff,
	0x33, 0xa8, 0x6b, 0x08, 0x65, 0x99, 0x2d, 0x56, 0x8a, 0x35, 0x59, 0xf5, 0x65, 0xf9, 0xce, 0xc2,
	0x36, 0xc3, 0xe0, 0x74, 0x86, 0xbd, 0x83, 0x0c, 0xa7, 0xb7, 0x10, 0xe0, 0x6b, 0x20, 0xaf, 0xeb,
	0x97, 0x8c, 0xf6, 0xc9, 0xd3, 0xbd, 0x3f, 0x48, 0x12, 0xef, 0x3c, 0x99, 0xd1, 0x93, 0xaf, 0x3d,
	0xfc, 0x3f, 0xdd, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x07, 0x63, 0x6d, 0x9a, 0xba, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	QueryOrder(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryReply, error)
}

type queryClient struct {
	cc *grpc.ClientConn
}

func NewQueryClient(cc *grpc.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) QueryOrder(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryReply, error) {
	out := new(QueryReply)
	err := c.cc.Invoke(ctx, "/Query/QueryOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	QueryOrder(context.Context, *QueryRequest) (*QueryReply, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) QueryOrder(ctx context.Context, req *QueryRequest) (*QueryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryOrder not implemented")
}

func RegisterQueryServer(s *grpc.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_QueryOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Query/QueryOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryOrder(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryOrder",
			Handler:    _Query_QueryOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "OneQueryInterface.proto",
}
